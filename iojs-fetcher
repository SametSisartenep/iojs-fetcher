#!/usr/bin/env bash

release=$1

nodejs='node'
programs=( node wget )

print_installed () {
  echo -e "\x1b[1;36m$program\x1b[0m \x1b[0;32m✓ - installed\x1b[0m"
}

print_not_installed () {
  echo -e "\x1b[1;36m$program\x1b[0m \x1b[0;31m✘ - not installed\x1b[0m"
  exit 1
}

download_it () {
  echo -e "\x1b[1;37mSelected version:\x1b[0m \x1b[0;32m${release}\x1b[0m"
  url="https://github.com/iojs/io.js/archive/v${release}.tar.gz"
  echo -e "\x1b[1;37mDowloading: \x1b[0;34m$url\x1b[0m"
  wget $url
}

for program in ${programs[@]}
do
  if type $program &>/dev/null; then
    print_installed
  else
    if [ $program == "node" ]; then
      if type iojs &>/dev/null; then
        print_installed
        nodejs='iojs'
      else
        print_not_installed
      fi
    else
      print_not_installed
    fi
  fi
done

if [[ $release =~ ^[0-9][.][0-9][.][0-9]$ ]];then
  true
else
  if [ $release ]; then
    release=`${nodejs} -e "console.log('${release}'.match(/[0-9][.][0-9][.][0-9]/g)[0]);"`
  fi
fi

if [ $release ]; then
  download_it
else
  echo -e "\x1b[1;31mNo version specified.\x1b[0m"
  echo "Do you want to fetch the latest version?"
  read option

  case $option in
    "yes"|"y"|"Y")
      versions=`curl https://api.github.com/repos/iojs/io.js/tags`
      release=`${nodejs} -e "console.log((${versions})[0].name.match(/[0-9][.][0-9][.][0-9]/g)[0])"`
      download_it
      ;;
    *)
      echo "Bye :)"
      exit 1
      ;;
  esac
fi
